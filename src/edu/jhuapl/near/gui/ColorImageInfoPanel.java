/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImageInfoPanel2.java
 *
 * Created on May 30, 2011, 12:24:26 PM
 */
package edu.jhuapl.near.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import edu.jhuapl.near.model.ColorImage;
import edu.jhuapl.near.model.ColorImageCollection;
import edu.jhuapl.near.model.Model;
import edu.jhuapl.near.util.IntensityRange;


public class ColorImageInfoPanel extends ModelInfoWindow implements PropertyChangeListener
{
    private ColorImage image;
    private ColorImageCollection imageCollection;

    /** Creates new form ImageInfoPanel2 */
    public ColorImageInfoPanel(
            final ColorImage image,
            ColorImageCollection imageCollection)
    {
        initComponents();

        this.image = image;
        this.imageCollection = imageCollection;

        pack();
        setVisible(true);
    }


    public Model getModel()
    {
        return image;
    }

    public Model getCollectionModel()
    {
        return imageCollection;
    }

    public void propertyChange(PropertyChangeEvent arg0)
    {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        redSlider = new com.jidesoft.swing.RangeSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        blueSlider = new com.jidesoft.swing.RangeSlider();
        greenSlider = new com.jidesoft.swing.RangeSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        redSlider.setMajorTickSpacing(10);
        redSlider.setMaximum(255);
        redSlider.setPaintTicks(true);
        redSlider.setHighValue(255);
        redSlider.setLowValue(0);
        redSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                redSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(redSlider, gridBagConstraints);

        jLabel1.setText("Red Contrast:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel7.setText("Green Contrast");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("Blue Contrast");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        blueSlider.setMajorTickSpacing(10);
        blueSlider.setMaximum(255);
        blueSlider.setPaintTicks(true);
        blueSlider.setHighValue(255);
        blueSlider.setLowValue(0);
        blueSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blueSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(blueSlider, gridBagConstraints);

        greenSlider.setMajorTickSpacing(10);
        greenSlider.setMaximum(255);
        greenSlider.setPaintTicks(true);
        greenSlider.setHighValue(255);
        greenSlider.setLowValue(0);
        greenSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                greenSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        getContentPane().add(greenSlider, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void redSliderStateChanged(javax.swing.event.ChangeEvent evt)
    {//GEN-FIRST:event_redSliderStateChanged
        if (redSlider.getValueIsAdjusting())
            return;

        adjustContrast();
    }//GEN-LAST:event_redSliderStateChanged

    private void greenSliderStateChanged(javax.swing.event.ChangeEvent evt)
    {//GEN-FIRST:event_greenSliderStateChanged
        if (greenSlider.getValueIsAdjusting())
            return;

        adjustContrast();
    }//GEN-LAST:event_greenSliderStateChanged

    private void blueSliderStateChanged(javax.swing.event.ChangeEvent evt)
    {//GEN-FIRST:event_blueSliderStateChanged
        if (blueSlider.getValueIsAdjusting())
            return;

        adjustContrast();
    }//GEN-LAST:event_blueSliderStateChanged

    private void adjustContrast()
    {
        int redLowVal = redSlider.getLowValue();
        int redHighVal = redSlider.getHighValue();
        int greenLowVal = greenSlider.getLowValue();
        int greenHighVal = greenSlider.getHighValue();
        int blueLowVal = blueSlider.getLowValue();
        int blueHighVal = blueSlider.getHighValue();
        image.setDisplayedImageRange(
                new IntensityRange(redLowVal, redHighVal),
                new IntensityRange(greenLowVal, greenHighVal),
                new IntensityRange(blueLowVal, blueHighVal));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.jidesoft.swing.RangeSlider blueSlider;
    private com.jidesoft.swing.RangeSlider greenSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.jidesoft.swing.RangeSlider redSlider;
    // End of variables declaration//GEN-END:variables
}
